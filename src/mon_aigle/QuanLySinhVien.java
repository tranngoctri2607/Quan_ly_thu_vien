/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mon_aigle;

import com.microsoft.sqlserver.jdbc.SQLServerException;
import java.sql.*;
import java.util.logging.*;
import java.util.regex.*;
import javax.swing.*;

/**
 *
 * @author non
 */
public class QuanLySinhVien extends javax.swing.JFrame {

    /**
     * Creates new form QuanLySinhVien
     */
    String sqlServer = "localhost";
    String port = "1433";
    String user = "sa1";
    String passWord = "123";
    String database = "QuanLyThuVien";
    String url = "jdbc:sqlserver://" + sqlServer + ":" + port + ";user=" + user + ";password=" + passWord + ";databaseName=" + database + ";encrypt=false";

    public QuanLySinhVien() {
        setTitle("Quản lý sinh viên");
        setLocation(400, 100);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane4 = new javax.swing.JTabbedPane();
        jpnTT = new javax.swing.JPanel();
        lblTenSV = new javax.swing.JLabel();
        lblDiaChiNha = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtIDSV = new javax.swing.JTextField();
        btnTimSV = new javax.swing.JButton();
        lblIDSV = new javax.swing.JLabel();
        jpnDK = new javax.swing.JPanel();
        lbl21 = new javax.swing.JLabel();
        lbl23 = new javax.swing.JLabel();
        lbl24 = new javax.swing.JLabel();
        lbl25 = new javax.swing.JLabel();
        lbl26 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        txtDKID = new javax.swing.JTextField();
        txtDKPW = new javax.swing.JPasswordField();
        txtDKTen = new javax.swing.JTextField();
        txtDKDC = new javax.swing.JTextField();
        txtDKSDT = new javax.swing.JTextField();
        txtDKEmail = new javax.swing.JTextField();
        btnDangKy = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane4.setBorder(new javax.swing.border.MatteBorder(null));
        jTabbedPane4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jpnTT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTenSV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTenSV.setText("Tên sinh viên: ");

        lblDiaChiNha.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDiaChiNha.setText("Địa chỉ nhà: ");

        lblSDT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSDT.setText("Số điện thoại: ");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmail.setText("Email: ");

        txtIDSV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnTimSV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTimSV.setText("Tìm sinh viên");
        btnTimSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimSVActionPerformed(evt);
            }
        });

        lblIDSV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblIDSV.setText("ID sinh viên: ");

        javax.swing.GroupLayout jpnTTLayout = new javax.swing.GroupLayout(jpnTT);
        jpnTT.setLayout(jpnTTLayout);
        jpnTTLayout.setHorizontalGroup(
            jpnTTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnTTLayout.createSequentialGroup()
                .addGroup(jpnTTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiaChiNha, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnTTLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jpnTTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnTTLayout.createSequentialGroup()
                                .addComponent(lblIDSV, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addComponent(txtIDSV, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btnTimSV, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101))
                            .addComponent(lblTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jpnTTLayout.setVerticalGroup(
            jpnTTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnTTLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpnTTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpnTTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTimSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIDSV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblIDSV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(lblTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(lblDiaChiNha, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174))
        );

        jTabbedPane4.addTab("Thông tin sinh viên", jpnTT);

        jpnDK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbl21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl21.setText("ID sinh viên: ");

        lbl23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl23.setText("Tên sinh viên: ");

        lbl24.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl24.setText("Địa chỉ nhà: ");

        lbl25.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl25.setText("Số điện thoại: ");

        lbl26.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl26.setText("Email: ");

        lbl2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl2.setText("Mật khẩu: ");

        btnDangKy.setText("Đăng ký");
        btnDangKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnDKLayout = new javax.swing.GroupLayout(jpnDK);
        jpnDK.setLayout(jpnDKLayout);
        jpnDKLayout.setHorizontalGroup(
            jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnDKLayout.createSequentialGroup()
                .addGroup(jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnDKLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl23, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(lbl24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDKID)
                            .addComponent(txtDKPW)
                            .addComponent(txtDKTen)
                            .addComponent(txtDKDC)
                            .addComponent(txtDKSDT)
                            .addComponent(txtDKEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)))
                    .addGroup(jpnDKLayout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(btnDangKy, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpnDKLayout.setVerticalGroup(
            jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnDKLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDKID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDKPW)
                    .addComponent(lbl2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDKTen)
                    .addComponent(lbl23, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDKDC)
                    .addComponent(lbl24, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDKSDT)
                    .addComponent(lbl25, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(jpnDKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl26, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(txtDKEmail))
                .addGap(18, 18, 18)
                .addComponent(btnDangKy, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane4.addTab("Đăng ký tài khoản sinh viên", jpnDK);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane4)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane4)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static final String P_EMAIL = "^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$";
    private static final String P_SDT = "\\d{10}";

    public boolean validateF() {
        if (txtDKID.getText().equals("")) {
            System.out.println("id ko để trống");
            return false;
        }
        if (txtDKTen.getText().equals("")) {
            System.out.println("tên ko để trống");
            return false;
        }
        if (txtDKDC.getText().equals("")) {
            System.out.println("địa chỉ ko để trống");
            return false;
        }
        if (txtDKSDT.getText().equals("")) {
            System.out.println("SDT ko để trống");
            return false;
        }
        Matcher matcherSDT = Pattern.compile(P_SDT).matcher(txtDKSDT.getText());
        if (!matcherSDT.matches()) {
            System.out.println("sdt 10 số");
            return false;
        }
        if (txtDKEmail.getText().equals("")) {
            System.out.println("Email ko để trống");
            return false;
        }
        Matcher matcherEmail = Pattern.compile(P_EMAIL).matcher(txtDKEmail.getText());
        if (!matcherEmail.matches()) {
            System.out.println("Email sai định dạng");
            return false;
        }
        String matKhau = new String(txtDKPW.getPassword());
        if (matKhau.equals("")) {
            System.out.println("Mật khẩu ko để trống");
            return false;
        }
        return true;
    }

    void TimSinhVien(String ID) throws SQLException {
        // 2. Open connection
        try (Connection con = DriverManager.getConnection(url)) {
            // 3. Create Statement
            Statement st = con.createStatement();
            // 4. Execute query
            String sqlSelect = "SELECT * FROM [QuanLyThuVien].[dbo].[QuanLySinhVien] where IDsinhvien='" + ID + "'";
            ResultSet rs = st.executeQuery(sqlSelect);
            if (rs.next()) {
                String TenSinhVien = rs.getString("TenSinhVien");
                lblTenSV.setText(lblTenSV.getText() + TenSinhVien);
                String diaChiNha = rs.getString("DiaChiNha");
                lblDiaChiNha.setText(lblDiaChiNha.getText() + diaChiNha);
                String sdt = rs.getString("SDT");
                lblSDT.setText(lblSDT.getText() + sdt);
                String email = rs.getString("Email");
                lblEmail.setText(lblEmail.getText() + email);
            } else {
                JOptionPane.showMessageDialog(this, "Khum tìm thấy");
            }
            rs.close();
            st.close();
            // 5. Close connection
            con.close();
        } catch (SQLServerException e) {
            System.out.println(e);
        }
    }

    String DangKy(String id) throws SQLException {
        String idSinhVien = "";
        // 2. Open connection
        try (Connection con = DriverManager.getConnection(url)) {
            // 3. Create Statement
            Statement st = con.createStatement();
            // 4. Execute query
            String sqlSelect = "SELECT * FROM QuanLySinhVien WHERE IDsinhvien='" + id + "'";
            ResultSet rs = st.executeQuery(sqlSelect);
            if (rs.next()) {
                idSinhVien = rs.getString("IDsinhvien");
            }
            rs.close();
            st.close();
            // 5. Close connection
            con.close();
        } catch (SQLServerException e) {
            System.out.println(e);
        }
        if (idSinhVien.equals("")) {

            return null;
        } else {
            JOptionPane.showMessageDialog(this, "Đã tồn tại ID sinh viên");
            return idSinhVien;
        }
    }

    void Them() throws SQLException {
        String idSinhVien = txtDKID.getText();
        String tenSinhvien = txtDKTen.getText();
        String email = txtDKEmail.getText();
        String diaChi = txtDKDC.getText();
        String soDienThoai = txtDKSDT.getText();
        String matKhau = new String(txtDKPW.getPassword());
        // 2. Open connection
        try (Connection con = DriverManager.getConnection(url)) {
            // 3. Create Statement
            Statement st = con.createStatement();
            // 4. Execute query
            String sqlInsert = "INSERT INTO QuanLySinhVien(IDsinhvien, TenSinhVien, DiaChiNha, SDT, Email, MatKhau) VALUES ('" + idSinhVien + "', N'" + tenSinhvien + "', N'" + diaChi + "', '" + soDienThoai + "', '" + email + "', N'" + matKhau + "')";
            ResultSet rs = st.executeQuery(sqlInsert);
            rs.close();
            st.close();
            // 5. Close connection
            con.close();
        } catch (SQLServerException e) {
            System.out.println(e);
        }
    }

    private void btnTimSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimSVActionPerformed
        try {
            TimSinhVien(txtIDSV.getText());
        } catch (SQLException ex) {
            Logger.getLogger(QuanLySinhVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTimSVActionPerformed

    private void btnDangKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKyActionPerformed
        if (validateF()) {
            try {
                if (DangKy(txtDKID.getText()) == null) {
                    Them();
                }
            } catch (SQLException ex) {
                Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDangKyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLySinhVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKy;
    private javax.swing.JButton btnTimSV;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JPanel jpnDK;
    private javax.swing.JPanel jpnTT;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl21;
    private javax.swing.JLabel lbl23;
    private javax.swing.JLabel lbl24;
    private javax.swing.JLabel lbl25;
    private javax.swing.JLabel lbl26;
    private javax.swing.JLabel lblDiaChiNha;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblIDSV;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTenSV;
    private javax.swing.JTextField txtDKDC;
    private javax.swing.JTextField txtDKEmail;
    private javax.swing.JTextField txtDKID;
    private javax.swing.JPasswordField txtDKPW;
    private javax.swing.JTextField txtDKSDT;
    private javax.swing.JTextField txtDKTen;
    private javax.swing.JTextField txtIDSV;
    // End of variables declaration//GEN-END:variables
}
